; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py UTC_ARGS: --version 5
; RUN: llc -mtriple=aarch64-unknown-linux-gnu -mattr=+fp-armv8,+fullfp16 < %s | FileCheck %s


define void @_Z10store_f64i32Pjd(ptr %n, double noundef %x){
; CHECK-LABEL: _Z10store_f64i32Pjd:
; CHECK:       // %bb.0: // %entry
; CHECK-NEXT:    str s0, [x0]
; CHECK-NEXT:    ret
entry:
  %0 = bitcast double %x to i64
  %conv = trunc i64 %0 to i32
  store i32 %conv, ptr %n, align 4
  ret void
}

define void @_Z9store_f64i16Ptd(ptr %n, double noundef %x){
; CHECK-LABEL: _Z9store_f64i16Ptd:
; CHECK:       // %bb.0: // %entry
; CHECK-NEXT:    str h0, [x0]
; CHECK-NEXT:    ret
entry:
  %0 = bitcast double %x to i64
  %conv = trunc i64 %0 to i16
  store i16 %conv, ptr %n, align 2
  ret void
}

define void @_Z13store_f64i8Phd(ptr %0, double noundef %1){
; CHECK-LABEL: _Z13store_f64i8Phd:
; CHECK:       // %bb.0:
; CHECK-NEXT:    str b0, [x0]
; CHECK-NEXT:    ret
  %3 = bitcast double %1 to i64
  %4 = trunc i64 %3 to i8
  store i8 %4, ptr %0, align 1
  ret void
}

define void @_Z17store_f32i16Ptf(ptr %0, float noundef %1){
; CHECK-LABEL: _Z17store_f32i16Ptf:
; CHECK:       // %bb.0:
; CHECK-NEXT:    str h0, [x0]
; CHECK-NEXT:    ret
  %3 = bitcast float %1 to i32
  %4 = trunc i32 %3 to i16
  store i16 %4, ptr %0, align 2
  ret void
}

define void @_Z16store_f32i8Phf(ptr  %0, float noundef %1){
; CHECK-LABEL: _Z16store_f32i8Phf:
; CHECK:       // %bb.0:
; CHECK-NEXT:    str b0, [x0]
; CHECK-NEXT:    ret
  %3 = bitcast float %1 to i32
  %4 = trunc i32 %3 to i8
  store i8 %4, ptr %0, align 1
  ret void
}
